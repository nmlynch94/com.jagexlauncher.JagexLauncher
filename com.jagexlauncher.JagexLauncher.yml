# Versions
x-gl-version: &gl-version '1.4'
x-gl-versions: &gl-versions 23.08;1.4
x-runtime-version: &runtime-version '23.08'
# Flatpak manifest
app-id: com.jagexlauncher.JagexLauncher
runtime: org.freedesktop.Platform
runtime-version: *runtime-version
sdk: org.freedesktop.Sdk
command: jagex-run
finish-args:
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --socket=pulseaudio
  - --device=dri
  - --share=network
  - --allow=multiarch
  - --allow=devel
  - --talk-name=org.freedesktop.Notifications
sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.openjdk17
add-extensions:
  org.freedesktop.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: *runtime-version
  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: *gl-version
    versions: *gl-versions
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;lib/dri;lib/d3d;vulkan/explicit_layer.d;vulkan/implicit_layer.d
    download-if: active-gl-driver
    enable-if: active-gl-driver
modules:
  - name: libnotify
    buildsystem: meson
    config-opts:
      - -Dman=false
      - -Dgtk_doc=false
      - -Ddocbook_docs=disabled
    cleanup:
      - /include
      - /lib/pkgconfig
      - /lib/debug
      - /lib/girepository-1.0
      - /share/gtk-doc
      - /share/gir-1.0
    sources:
      - type: git
        url: https://github.com/GNOME/libnotify.git
        tag: 0.8.3
        commit: 6083790f9e0f1827147ecd8799c4dced0e86a877
  - name: openjdk
    buildsystem: simple
    build-commands:
      - /usr/lib/sdk/openjdk17/install.sh
      - mv /app/jre/bin/java /app/jre/bin/java.bk
      - mv java /app/jre/bin/java
      - chmod +x /app/jre/bin/java
    sources:
      - type: script
        dest-filename: java # https://gitlab.com/hdos/issues/-/issues/2004
        commands:
          - 
            #!/bin/bash
          - /app/jre/bin/java.bk $(echo "$@" | sed 's|--add-opens java.desktop/java.awt=ALL-UNNAMED||g')
  - name: wine-ge
    buildsystem: simple
    build-commands:
      - mkdir wine
      - tar xf wine.tar.xz -C wine --strip-components 1 # String top level dir and place into predictable directory name to decouple from the name of the top-level dir
      - install --directory /app/opt
      - mv wine /app/opt/wine
    sources:
      - type: file
        dest-filename: wine.tar.xz
        url: https://github.com/GloriousEggroll/wine-ge-custom/releases/download/GE-Proton8-26/wine-lutris-GE-Proton8-26-x86_64.tar.xz
        sha512: 3abd578ed45a16096843936e0258799450e6a5751bc67afaf8c58cd245c40e62794a89af25ae482d74d5ca2b7527d17ff77232781c6d9cf97bc02976c2f960bd
        x-checker-data:
          type: json
          url: https://api.github.com/repos/GloriousEggroll/wine-ge-custom/releases/latest
          version-query: .tag_name | sub("^GE-Proton-"; "")
          url-query: .assets[] | select(.name=="wine-lutris-" + $version + "-x86_64.tar.xz")
            | .browser_download_url
  - name: runelite-jar
    buildsystem: simple
    build-commands:
      - mv RuneLite.jar /app/
      - mv RuneLite.exe /app/
    sources:
      - type: file
        dest-filename: RuneLite.jar
        url: https://github.com/runelite/launcher/releases/download/2.7.4/RuneLite.jar
        sha256: fb71b8164d2d974595213ca142f44f43d9e166e2ebe1700f66f5f76f5ce00dbf
        x-checker-data:
          type: json
          url: https://api.github.com/repos/runelite/launcher/releases
          version-query: first(.[] | select(.assets[] | .name == "RuneLite.jar"))
            | .tag_name
          url-query: first(.[] | select(.assets[] | .name == "RuneLite.jar")) .assets[]
            | select(.name == "RuneLite.jar") | .browser_download_url
      - type: script
        dest-filename: RuneLite.exe   # We name this bash script .exe bc Jagex Launcher runs RuneLite.exe. Wine is able to somehow intepret it is a bash script and run that instead.
        commands:
          - 
              #!/bin/bash
          - set -x
          - /app/jre/bin/java.bk -Duser.home="$XDG_DATA_HOME/user_home" -jar /app/RuneLite.jar
            -J-Duser.home="$XDG_DATA_HOME/user_home"
  - name: hdos-jar
    buildsystem: simple
    build-commands:
      - mv hdos-launcher.jar /app/
      - mv HDOS.exe /app/
    sources:
      - type: file
        dest-filename: hdos-launcher.jar
        url: https://cdn.hdos.dev/launcher/v8/hdos-launcher.jar
        sha256: d3475d791fa8bfa4e3ae7fa9b1c5e86a8e02d1e93f88ff4776582af78ea92fc0
        x-checker-data:
          type: html
          url: https://cdn.hdos.dev/client/getdown.txt
          version-pattern: launcher.version = (\d.*)
          url-template: https://cdn.hdos.dev/launcher/v$version/hdos-launcher.jar
      - type: script
        dest-filename: HDOS.exe # We name this bash script .exe bc Jagex Launcher runs RuneLite.exe. Wine is able to somehow intepret it is a bash script and run that instead.
        commands:
          - 
            #!/bin/bash
          - /app/jre/bin/java -jar /app/hdos-launcher.jar
  - name: jagex-launcher
    buildsystem: simple
    build-commands:
      - mkdir -p /app/lib/i386-linux-gnu/GL
      - mkdir -p /app/lib/debug/lib/i386-linux-gnu
      - mkdir -p /app/bin
      - install jagex-install /app/bin/jagex-install
      - install -Dm644 com.jagexlauncher.JagexLauncher.desktop /app/share/applications/com.jagexlauncher.JagexLauncher.desktop
      - install -Dm644 com.jagexlauncher.JagexLauncher.metainfo.xml /app/share/metainfo/com.jagexlauncher.JagexLauncher.metainfo.xml
      - install -Dm644 256.png /app/share/icons/hicolor/256x256/apps/com.jagexlauncher.JagexLauncher.png
      - install -Dm644 steamdeck-settings.properties /app/steamdeck-settings.properties
    sources:
      - type: file
        path: jagex-launcher-linux/resources/installer.py
        dest-filename: jagex-install
      - type: file
        path: com.jagexlauncher.JagexLauncher.desktop
      - type: file
        path: com.jagexlauncher.JagexLauncher.metainfo.xml
      - type: file
        path: icons/256/256.png
      - type: file
        path: jagex-launcher-linux/resources/steamdeck-settings.properties
  - name: launch-script
    buildsystem: simple
    build-commands:
      - mkdir -p /app/bin
      - install jagex-run /app/bin/jagex-run
    sources:
      - type: file
        dest-filename: jagex-run
        path: scripts/jagex-run.sh
